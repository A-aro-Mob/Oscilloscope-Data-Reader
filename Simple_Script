import pyvisa
import time

# Initialize VISA resource manager and connect to the first available instrument
rm = pyvisa.ResourceManager()
resources = rm.list_resources()

# Connect to the oscilloscope
scope = rm.open_resource(resources[0])

# Set proper termination characters
scope.write_termination = '\n'
scope.read_termination = '\n'

# Query and print the instrument ID for verification
idn_response = scope.query("*IDN?")
print("Instrument ID:", repr(idn_response))

# Start acquisition
scope.write("ARM")

# Wait until acquisition is complete with timeout
timeout = 10  # seconds
start_time = time.time()
while True:
    try:
        status = scope.query("SAST?")
        print("Acquisition Status:", repr(status))
        if "trig" in status.lower() or "ready" in status.lower() or "stop" in status.lower():
            break
    except Exception as e:
        print("Error reading acquisition status:", e)
        break

    if time.time() - start_time > timeout:
        print("Timeout waiting for acquisition to complete.")
        break

    time.sleep(0.1)


# Set waveform transfer parameters (optional)
scope.write("WFSU SP,0,NP,1000,FP,0")

# Fetch and print waveform data
scope.write("C1:WF?")
raw_data = scope.read_raw()
print(raw_data[:100])  # Print first 100 bytes for inspection


# how does fpga go from the scope to the pc?
# try to understand the OSI communication model 
# (standard created by a company that outlines how communication applications are built)